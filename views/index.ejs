<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/map.css">
    <link href="https://fonts.googleapis.com/css?family=Poppins" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css">
    <!-- JQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js" integrity="sha256-xNzN2a4ltkB44Mc/Jz3pT4iU1cmeR0FkXs4pru/JxaQ=" crossorigin="anonymous"></script>
    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>

    <title>uCharging - Aplikasi Reservasi Charging Mobil</title>
    
</head>
<body>
<div id='map'></div>
<div class="button-wrapper">
    <a href="/profile">
        <button class="profile-button" action="">
            <img src="asset/profile.png" class="profile"></img>
        </button>
    </a>
    <button class="charger-button" onclick="getNormalCharger()">
        <img src="../asset/button_normal.png">
        <div>Normal Charger</div>
    </button>
    <button class="charger-button" onclick="getFastCharger()">
        <img src="../asset/button_fast.png">
        <div>Fast Charger</div>
    </button>
</div>
<!-- <script src="js/map.js"></script> -->
<script>
    var longitude = 106;
    var latitude = -6;
    var station_marker = [];
    function makeRequest(method, url, params) {
        return new Promise(function (resolve, reject) {
            var xhr = new XMLHttpRequest();
            xhr.open(method, url, true);
            xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            xhr.onload = function () {
                if (this.status >= 200 && this.status < 300) {
                    resolve(xhr.response);
                } else {
                    reject({
                        status: this.status,
                        statusText: xhr.statusText
                    });
                }
            };
            xhr.onerror = function () {
                reject({
                    status: this.status,
                    statusText: xhr.statusText
                });
            };
            xhr.send(JSON.stringify(params));
        });
    }
    function set_popup(id, name, address, distance, duration, power) {
        const popup = document.createElement("div");
        popup.className = "location-box";
        
        const div_wrapper = document.createElement("div");
        div_wrapper.className = "popup-wrapper";
        const div1 = document.createElement("div");
        const h5 = document.createElement("h5");
        h5.innerHTML = name;
        const h6 = document.createElement("h6");
        h6.innerHTML = address;
        div1.appendChild(h5);
        div1.appendChild(h6);

        const div2 = document.createElement("div");
        div2.classList.add("distance");
        div2.classList.add("popup-detail");
        var img = document.createElement("img");
        img.src = "asset/location.png";
        var h7 = document.createElement("h7");
        if(distance >= 1000) {
            h7.innerHTML = (distance/1000).toFixed(2)+ " km";
        } else {
            h7.innerHTML = distance + " m";
        }
        div2.appendChild(img);
        div2.appendChild(h7);

        div_wrapper.appendChild(div1);
        div_wrapper.appendChild(div2);

        const div3 = document.createElement("div");
        div3.classList.add("popup-detail");
        div3.classList.add("charging-power");
        var img = document.createElement("img");
        img.src = "asset/charging-power.png";
        var h7 = document.createElement("h7");
        h7.innerHTML = power + " kW";
        div3.appendChild(img);
        div3.appendChild(h7);

        const div4 = document.createElement("div");
        div4.classList.add("popup-detail");
        div4.classList.add("charging-power");
        var img = document.createElement("img");
        img.src = "asset/distance.png";
        var h7 = document.createElement("h7");
        h7.innerHTML = duration + " min";
        div4.appendChild(img);
        div4.appendChild(h7);

        const form = document.createElement("form");
        form.setAttribute("action", "/station-detail");
        form.setAttribute("method", "post");
        form.id = id;
        const input_station_id = document.createElement("input");
        input_station_id.setAttribute("type", "hidden");
        input_station_id.setAttribute("name", "station_id");
        input_station_id.setAttribute("value", id);
        const input_longitude = document.createElement("input");
        input_longitude.setAttribute("type", "hidden");
        input_longitude.setAttribute("name", "longitude");
        input_longitude.setAttribute("value", longitude);
        const input_latitude = document.createElement("input");
        input_latitude.setAttribute("type", "hidden");
        input_latitude.setAttribute("name", "latitude");
        input_latitude.setAttribute("value", latitude);

        const btn = document.createElement("input");
        btn.className = "button-detail";
        btn.value = "Detail";
        btn.setAttribute("type", "submit");

        form.appendChild(input_station_id);
        form.appendChild(input_longitude);
        form.appendChild(input_latitude);
        form.appendChild(btn);

        popup.appendChild(div_wrapper);
        popup.appendChild(div3);
        popup.appendChild(div4);
        popup.appendChild(form);
        
        return popup;
    }
    function setupMap(coordinate, icon, popup) {
        if(popup != undefined) {
            var marker = L.marker(coordinate, 
            {icon: icon})
            .addTo(map)
            .bindPopup(popup, popup_options);
        } else {
            var marker = L.marker(coordinate, 
            {icon: icon})
            .addTo(map);
        }

        return marker;
    }
    function deleteAllMarker() {
        if(station_marker !== null) {
            for (var i = station_marker.length - 1; i >= 0; i--) {
                station_marker[i].remove();
            }
        } 
    }
    function getNormalCharger() {
        deleteAllMarker();
        const params = {
            longitude: longitude,
            latitude: latitude
        };
        var resp = makeRequest("POST", "/normal_station", params)
        resp.then((r) => {
            var result = JSON.parse(r)["result"]
            result.forEach((T) => {
                var popup = set_popup(
                    T.station_id, 
                    T.station_name,
                    T.station_address,
                    T.distance,
                    T.duration,
                    T.charging_power
                );
                const marker = setupMap([T.latitude, T.longitude], normal_icon, popup);
                station_marker.push(marker);
            })
        })
    }
    function getFastCharger() {
        deleteAllMarker();
        const params = {
            longitude: longitude,
            latitude: latitude
        };
        var resp = makeRequest("POST", "/fast_station", params)
        resp.then((r) => {
            var result = JSON.parse(r)["result"]
            result.forEach((T) => {
                var popup = set_popup(
                    T.station_id, 
                    T.station_name,
                    T.station_address,
                    T.distance,
                    T.duration,
                    T.charging_power
                );
                const marker = setupMap([T.latitude, T.longitude], fast_icon, popup);
                station_marker.push(marker);
            })
        })
    }
    // Initialize Map
    var map = L.map("map", {
        center: [latitude, longitude],
        zoom: 16,
        zoomControl: false
    });
    L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(map);
    var MarkerIcon = L.Icon.extend({
        options: {
            iconSize: [40,40],
            iconAnchor: [20, 39],
            popupAnchor: [0, -30],
        }
    })
    var user_icon = new MarkerIcon({iconUrl: "/asset/marker_user.png"})
    var default_icon = new MarkerIcon({iconUrl: '/asset/marker_default.png'})
    var normal_icon = new MarkerIcon({iconUrl: '/asset/marker_normal.png'})
    var fast_icon = new MarkerIcon({iconUrl: '/asset/marker_fast.png'})

    var popup_options = {
        'maxWidth': 'auto'
    }

    navigator.geolocation.getCurrentPosition((position) => {
        latitude = -6.169;
        longitude = 106.817;
        // longitude = position.coords.longitude;
        // latitude = position.coords.latitude;
        
        setupMap([latitude, longitude], user_icon, undefined);
        map.flyTo([latitude, longitude]);

        const params = {
            longitude: longitude,
            latitude: latitude
        }
        var resp = makeRequest("POST", "/near_station", params);
        resp.then((r) => {
            var result = JSON.parse(r)["result"]
            result.forEach((T) => {
                var popup = set_popup(
                    T.station_id, 
                    T.station_name,
                    T.station_address,
                    T.distance,
                    T.duration,
                    T.charging_power
                );
                const marker = setupMap([T.latitude, T.longitude], default_icon, popup);
                station_marker.push(marker);
            })
        });
    }, () => {}, {enableHighAccuracy: true});
</script>
</body>
</html>